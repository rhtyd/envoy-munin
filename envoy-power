#!/bin/bash
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# Usage:
# Users should ensure envoy.local resolves to their IQ Envoy
# Or they may add an entry in /etc/hosts
# Requirements: curl and jq installed
# Author: Rohit Yadav <rohit@yadav.cloud>

get_config() {
    echo "graph_title Envoy Power (Watt)"
    echo "graph_category envoy"
    echo "update_rate 10"
    echo "ptotal.label Production Total W"
    echo "p1.label Production L1(A) W"
    echo "p2.label Production L2(B) W"
    echo "p3.label Production L3(C) W"
    echo "ctotal.label Consumption Total W"
    echo "c1.label Consumption L1(A) W"
    echo "c2.label Consumption L2(B) W"
    echo "c3.label Consumption L3(C) W"
}

get_values() {
    data=$(curl http://envoy.local/production.json?details=1 2>/dev/null)
    printf "ptotal.value %s\n" $(echo $data | jq '.production|.[1].wNow')
    COUNTER=1
    for line in $(echo $data | jq '.production|.[1].lines|.[].wNow'); do
        printf "p%d.value %s\n" $COUNTER $line
        COUNTER=$((COUNTER+1))
    done
    printf "ctotal.value %s\n" $(echo $data | jq '.consumption|.[0].wNow')
    COUNTER=1
    for line in $(echo $data | jq '.consumption|.[0].lines|.[].wNow'); do
        printf "c%d.value %s\n" $COUNTER $line
        COUNTER=$((COUNTER+1))
    done
}

usage() {
    printf >&2 "%s - munin plugin to graph power stats\n" ${0##*/}
    printf >&2 "Usage: %s [config]\n" ${0##*/}
}

case $# in
    0)
        get_values
        ;;
    1)
        case $1 in
            config)
                get_config
                ;;
            *)
                usage
                exit 1
                ;;
        esac
        ;;
    *)
        usage
        exit 1
        ;;
esac
